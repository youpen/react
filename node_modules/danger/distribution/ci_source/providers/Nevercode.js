"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var ci_source_helpers_1 = require("../ci_source_helpers");
var get_repo_slug_1 = require("../../commands/init/get-repo-slug");
/**
 * Nevercode.io CI Integration
 *
 * Environment Variables Documented: https://developer.nevercode.io/v1.0/docs/environment-variables-files
 */
var Nevercode = /** @class */ (function () {
    function Nevercode(env) {
        this.env = env;
        this.default = { prID: "0" };
    }
    Nevercode.prototype.setup = function () {
        return __awaiter(this, void 0, void 0, function () {
            var prID;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, ci_source_helpers_1.getPullRequestIDForBranch(this, this.env, this.branchName)];
                    case 1:
                        prID = _a.sent();
                        this.default.prID = prID.toString();
                        return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(Nevercode.prototype, "name", {
        get: function () {
            return "Nevercode";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Nevercode.prototype, "isCI", {
        get: function () {
            return ci_source_helpers_1.ensureEnvKeysExist(this.env, ["NEVERCODE"]);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Nevercode.prototype, "isPR", {
        get: function () {
            var mustHave = ["NEVERCODE_PULL_REQUEST"];
            var mustBeInts = ["NEVERCODE_GIT_PROVIDER_PULL_REQUEST"];
            return ci_source_helpers_1.ensureEnvKeysExist(this.env, mustHave) && ci_source_helpers_1.ensureEnvKeysAreInt(this.env, mustBeInts);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Nevercode.prototype, "pullRequestID", {
        get: function () {
            return this.default.prID;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Nevercode.prototype, "repoSlug", {
        get: function () {
            return get_repo_slug_1.getRepoSlug();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Nevercode.prototype, "supportedPlatforms", {
        get: function () {
            return ["github"];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Nevercode.prototype, "ciRunURL", {
        get: function () {
            return process.env.NEVERCODE_BUILD_URL;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Nevercode.prototype, "branchName", {
        get: function () {
            if (this.isPR) {
                return this.env.NEVERCODE_PULL_REQUEST_SOURCE;
            }
            else {
                return this.env.NEVERCODE_BRANCH;
            }
        },
        enumerable: true,
        configurable: true
    });
    return Nevercode;
}());
exports.Nevercode = Nevercode;
//# sourceMappingURL=Nevercode.js.map